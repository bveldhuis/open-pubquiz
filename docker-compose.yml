services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: pubquiz-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: pubquiz_root_password
      MYSQL_DATABASE: pubquiz
      MYSQL_USER: pubquiz_user
      MYSQL_PASSWORD: pubquiz_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - pubquiz-network

  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: pubquiz-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USERNAME: pubquiz_user
      DB_PASSWORD: pubquiz_password
      DB_DATABASE: pubquiz
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      PORT: 3000
      SEED_DATABASE: false
    ports:
      - "3000:3000"
    depends_on:
      - mysql
    networks:
      - pubquiz-network
    volumes:
      - ./backend/uploads:/app/uploads
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { let data = ''; res.on('data', chunk => data += chunk); res.on('end', () => { try { const health = JSON.parse(data); process.exit(health.status === 'OK' ? 0 : 1); } catch (e) { process.exit(1); } }); }).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Angular App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: pubquiz-frontend
    restart: unless-stopped
    ports:
      - "4200:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - pubquiz-network

volumes:
  mysql_data:

networks:
  pubquiz-network:
    driver: bridge
